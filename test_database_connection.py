#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import asyncio
from dotenv import load_dotenv

load_dotenv()


async def test_database_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        database_url = os.getenv("DATABASE_URL")
        if not database_url:
            print("‚ùå DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return False
        
        print(f"‚úÖ DATABASE_URL: {database_url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ asyncpg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        import asyncpg
        print("‚úÖ asyncpg –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        try:
            # asyncpg –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ö–µ–º—É postgresql://, –∞ –Ω–µ asyncpg+postgresql://
            asyncpg_url = database_url.replace("asyncpg+", "")
            conn = await asyncpg.connect(asyncpg_url)
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å
            result = await conn.fetchval("SELECT 1")
            print(f"‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω: {result}")
            
            await conn.close()
            print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("1. PostgreSQL —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            print("2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
            print("3. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            print("4. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
            return False
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


async def test_sqlalchemy_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SQLAlchemy"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ SQLAlchemy...")
    
    try:
        from database.engine import sessionmaker
        
        async with sessionmaker() as session:
            # –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            result = await session.execute("SELECT 1")
            print("‚úÖ SQLAlchemy –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SQLAlchemy –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\n")
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ asyncpg
    db_test = await test_database_connection()
    
    # –¢–µ—Å—Ç 2: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SQLAlchemy
    sqlalchemy_test = await test_sqlalchemy_connection()
    
    print("\n" + "="*50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ë–î")
    print("="*50)
    
    if db_test:
        print("‚úÖ –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ asyncpg: –†–ê–ë–û–¢–ê–ï–¢")
    else:
        print("‚ùå –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ asyncpg: –ù–ï –†–ê–ë–û–¢–ê–ï–¢")
    
    if sqlalchemy_test:
        print("‚úÖ SQLAlchemy –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: –†–ê–ë–û–¢–ê–ï–¢")
    else:
        print("‚ùå SQLAlchemy –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: –ù–ï –†–ê–ë–û–¢–ê–ï–¢")
    
    if db_test and sqlalchemy_test:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("‚úÖ –ë–æ—Ç –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è!")
    else:
        print("\n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´!")
        print("‚ùå –ë–æ—Ç –ù–ï –°–ú–û–ñ–ï–¢ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è!")
        print("\nüîß –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:")
        if not db_test:
            print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ PostgreSQL —Å–µ—Ä–≤–µ—Ä")
            print("2. –°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö 'otb_db'")
            print("3. –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'otb' —Å –ø–∞—Ä–æ–ª–µ–º '1234'")
            print("4. –î–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∞–≤–∞ –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        if not sqlalchemy_test:
            print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SQLAlchemy")


if __name__ == "__main__":
    asyncio.run(main())
