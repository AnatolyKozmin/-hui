from typing import Optional

from aiogram import Router, F
from aiogram.filters import Command, CommandObject
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery

from database.dao import FacultyAdminDAO
from database.engine import sessionmaker
from services.auth import AuthService
from services.redis_client import CacheKeys, RedisClient


def setup_common_router(redis_client: RedisClient) -> Router:
    router = Router()

    def get_main_menu_kb(user_id: int) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        buttons = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–º
        if AuthService.is_superadmin(user_id):
            buttons.append([InlineKeyboardButton(
                text="üëë –°—É–ø–µ—Ä–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", 
                callback_data="superadmin_menu"
            )])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞
        async def check_faculty_admin():
            try:
                async with sessionmaker() as session:
                    admin_dao = FacultyAdminDAO(session)
                    admin = await admin_dao.get_by_telegram_id(user_id)
                    return admin is not None
            except:
                return False
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∞–¥–º–∏–Ω–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ (–±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏)
        buttons.append([InlineKeyboardButton(
            text="üè´ –ê–¥–º–∏–Ω —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞", 
            callback_data="faculty_admin_menu"
        )])
        
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–æ–±–µ—Å–µ–¥—É—é—â–∏—Ö
        buttons.append([InlineKeyboardButton(
            text="üë• –°–æ–±–µ—Å–µ–¥—É—é—â–∏–π", 
            callback_data="interviewer_menu"
        )])
        
        return InlineKeyboardMarkup(inline_keyboard=buttons)

    @router.message(Command("start"))
    async def cmd_start(message: Message, command: CommandObject) -> None:
        arg = command.args or ""
        if arg.startswith("inv_"):
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–æ–∫-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –¥–ª—è —Å–æ–±–µ—Å–µ–¥—É—é—â–∏—Ö
            # –≠—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±—É–¥–µ—Ç –≤ —Ä–æ—É—Ç–µ—Ä–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            await message.answer(
                "üîó –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–∫–∏-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è...\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –º—ã –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –≤–∞—à—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é."
            )
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º–∏!\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å:",
            reply_markup=get_main_menu_kb(message.from_user.id)
        )

    @router.callback_query(F.data == "superadmin_menu")
    async def handle_superadmin_menu(callback: CallbackQuery) -> None:
        if not AuthService.is_superadmin(callback.from_user.id):
            await callback.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞", show_alert=True)
            return
        
        await callback.message.edit_text(
            "–ü–∞–Ω–µ–ª—å —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞–º–∏ - —Å–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏ - –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–±–ª–∏—Ü - –ø—Ä–∏–≤—è–∑–∫–∞ Google Sheets –∫ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞–º",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üè´ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞–º–∏", callback_data="super|faculties")],
                [InlineKeyboardButton(text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏", callback_data="super|admins")],
                [InlineKeyboardButton(text="üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–±–ª–∏—Ü", callback_data="super|sheets")],
                [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
            ])
        )
        await callback.answer()

    @router.callback_query(F.data == "faculty_admin_menu")
    async def handle_faculty_admin_menu(callback: CallbackQuery) -> None:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞
        async with sessionmaker() as session:
            admin_dao = FacultyAdminDAO(session)
            admin = await admin_dao.get_by_telegram_id(callback.from_user.id)
            
            if not admin and not AuthService.is_superadmin(callback.from_user.id):
                await callback.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞", show_alert=True)
                return
        
        await callback.message.edit_text(
            "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞:\n\n"
            "‚Ä¢ –°–æ–±–µ—Å–µ–¥—É—é—â–∏–µ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±–µ—Å–µ–¥—É—é—â–∏–º–∏\n"
            "‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–æ–¥—è—â–∏—Ö - –ø–∞—Ä—Å–∏–Ω–≥ –ª–∏—Å—Ç–æ–≤ –∏–∑ —Ç–∞–±–ª–∏—Ü opyt/ne_opyt\n"
            "‚Ä¢ –ò–º–ø–æ—Ä—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ - –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã svod\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–∞–º–∏ - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üë• –°–æ–±–µ—Å–µ–¥—É—é—â–∏–µ", callback_data="faculty|interviewers")],
                [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–æ–¥—è—â–∏—Ö", callback_data="faculty|add_interviewers")],
                [InlineKeyboardButton(text="üìã –ò–º–ø–æ—Ä—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", callback_data="faculty|import_participants")],
                [InlineKeyboardButton(text="‚è∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–∞–º–∏", callback_data="faculty|manage_slots")],
                [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
            ])
        )
        await callback.answer()

    @router.callback_query(F.data == "interviewer_menu")
    async def handle_interviewer_menu(callback: CallbackQuery) -> None:
        await callback.message.edit_text(
            "üë• –ü–∞–Ω–µ–ª—å —Å–æ–±–µ—Å–µ–¥—É—é—â–µ–≥–æ\n\n"
            "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
            "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º\n"
            "‚Ä¢ –û—Ç–º–µ—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π\n\n"
            "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üìÖ –ú–æ–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è", callback_data="interviewer|my_interviews")],
                [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="interviewer|settings")],
                [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
            ])
        )
        await callback.answer()

    @router.callback_query(F.data == "main_menu")
    async def handle_main_menu(callback: CallbackQuery) -> None:
        await callback.message.edit_text(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º–∏!\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å:",
            reply_markup=get_main_menu_kb(callback.from_user.id)
        )
        await callback.answer()

    return router


