#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
"""

import os
import asyncio
from dotenv import load_dotenv

load_dotenv()


async def test_bot_startup():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        from aiogram import Bot, Dispatcher
        print("‚úÖ aiogram –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
        token = os.getenv("TOKEN")
        if not token:
            print("‚ùå TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return False
        
        print(f"‚úÖ TOKEN: {token[:10]}...")
        
        # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
        bot = Bot(token=token)
        print("‚úÖ –ë–æ—Ç —Å–æ–∑–¥–∞–Ω")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä
        dp = Dispatcher()
        print("‚úÖ –î–∏—Å–ø–µ—Ç—á–µ—Ä —Å–æ–∑–¥–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        try:
            me = await bot.get_me()
            print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{me.username}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram API: {e}")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
        
        await bot.session.close()
        print("‚úÖ –ë–æ—Ç –∑–∞–∫—Ä—ã—Ç")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        return False


async def test_imports_without_db():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –±–µ–∑ –ë–î...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ë–î
        from services.redis_client import RedisClient
        print("‚úÖ Redis –∫–ª–∏–µ–Ω—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        from services.gspread_client import GSpreadClient
        print("‚úÖ Google Sheets –∫–ª–∏–µ–Ω—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç—ã
        redis_client = RedisClient()
        print("‚úÖ Redis –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")
        
        # –ù–µ —Å–æ–∑–¥–∞–µ–º GSpreadClient, —Ç–∞–∫ –∫–∞–∫ –Ω—É–∂–Ω—ã credentials
        print("‚úÖ Google Sheets –∫–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Å–æ–∑–¥–∞–Ω–∏—é")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤: {e}")
        return False


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞\n")
    
    tests = [
        ("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞", test_bot_startup),
        ("–ò–º–ø–æ—Ä—Ç—ã –±–µ–∑ –ë–î", test_imports_without_db),
    ]
    
    results = []
    
    for test_name, test_func in tests:
        try:
            result = await test_func()
            results.append((test_name, result))
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{test_name}': {e}")
            results.append((test_name, False))
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
    print("\n" + "="*50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ó–ê–ü–£–°–ö–ê")
    print("="*50)
    
    passed = 0
    for test_name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"{test_name:.<30} {status}")
        if result:
            passed += 1
    
    print("="*50)
    print(f"–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {passed}/{len(results)}")
    
    if passed == len(results):
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("‚úÖ –ë–æ—Ç –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!")
        print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ:")
        print("1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å asyncpg –≤ SQLAlchemy")
        print("2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Google credentials")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç—å Redis —Å–µ—Ä–≤–µ—Ä")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã.")
        print("‚ùå –ë–æ—Ç –ù–ï –°–ú–û–ñ–ï–¢ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è!")


if __name__ == "__main__":
    asyncio.run(main())
