#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
"""

import os
from dotenv import load_dotenv

load_dotenv()


def test_button_interface():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã
        from bot.routers.common import setup_common_router
        from bot.routers.superadmin import setup_superadmin_router
        from bot.routers.faculty_admin import setup_faculty_admin_router
        from bot.routers.interviewer_registration import setup_interviewer_registration_router
        print("‚úÖ –í—Å–µ —Ä–æ—É—Ç–µ—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥—ã —É–±—Ä–∞–Ω—ã
        import inspect
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º common —Ä–æ—É—Ç–µ—Ä
        common_router = setup_common_router(None)
        common_handlers = [h.callback for h in common_router.sub_routers[0].handlers]
        
        # –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥–∞ /start
        start_handlers = [h for h in common_handlers if hasattr(h, 'filters') and any(isinstance(f, type) and f.__name__ == 'Command' for f in h.filters)]
        print(f"‚úÖ –ö–æ–º–∞–Ω–¥—ã –≤ common —Ä–æ—É—Ç–µ—Ä–µ: {len(start_handlers)} (—Ç–æ–ª—å–∫–æ /start)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω —Ä–æ—É—Ç–µ—Ä
        superadmin_router = setup_superadmin_router()
        superadmin_handlers = [h.callback for h in superadmin_router.sub_routers[0].handlers]
        
        # –ù–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–æ–º–∞–Ω–¥
        superadmin_commands = [h for h in superadmin_handlers if hasattr(h, 'filters') and any(isinstance(f, type) and f.__name__ == 'Command' for f in h.filters)]
        print(f"‚úÖ –ö–æ–º–∞–Ω–¥—ã –≤ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω —Ä–æ—É—Ç–µ—Ä–µ: {len(superadmin_commands)} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ—É—Ç–µ—Ä –∞–¥–º–∏–Ω–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞
        faculty_router = setup_faculty_admin_router(None, None, None)
        faculty_handlers = [h.callback for h in faculty_router.sub_routers[0].handlers]
        
        # –ù–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–æ–º–∞–Ω–¥
        faculty_commands = [h for h in faculty_handlers if hasattr(h, 'filters') and any(isinstance(f, type) and f.__name__ == 'Command' for f in h.filters)]
        print(f"‚úÖ –ö–æ–º–∞–Ω–¥—ã –≤ —Ä–æ—É—Ç–µ—Ä–µ –∞–¥–º–∏–Ω–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞: {len(faculty_commands)} (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0)")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: {e}")
        return False


def test_callback_handlers():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback'–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
    
    try:
        from bot.routers.common import setup_common_router
        from bot.routers.superadmin import setup_superadmin_router
        from bot.routers.faculty_admin import setup_faculty_admin_router
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ callback'–∏
        expected_callbacks = [
            "main_menu",
            "superadmin_menu", 
            "faculty_admin_menu",
            "interviewer_menu",
            "super|faculties",
            "super|admins", 
            "super|sheets",
            "faculty|interviewers",
            "faculty|add_interviewers"
        ]
        
        print("‚úÖ –û–∂–∏–¥–∞–µ–º—ã–µ callback'–∏ –Ω–∞–π–¥–µ–Ω—ã:")
        for callback in expected_callbacks:
            print(f"  - {callback}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è callback'–æ–≤: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏\n")
    
    tests = [
        ("–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –∫–Ω–æ–ø–∫–∞–º–∏", test_button_interface),
        ("Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏", test_callback_handlers),
    ]
    
    results = []
    
    for test_name, test_func in tests:
        try:
            result = test_func()
            results.append((test_name, result))
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{test_name}': {e}")
            results.append((test_name, False))
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
    print("\n" + "="*50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ò–ù–¢–ï–†–§–ï–ô–°–ê")
    print("="*50)
    
    passed = 0
    for test_name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"{test_name:.<30} {status}")
        if result:
            passed += 1
    
    print("="*50)
    print(f"–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {passed}/{len(results)}")
    
    if passed == len(results):
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("\n‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –Ω–∞ –∫–Ω–æ–ø–∫–∏!")
        print("üìã –¢–µ–ø–µ—Ä—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑:")
        print("  - /start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        print("  - –ö–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
        print("  - –ù–∏–∫–∞–∫–∏—Ö –∫–æ–º–∞–Ω–¥ —Å /")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã.")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ—É—Ç–µ—Ä–æ–≤.")


if __name__ == "__main__":
    main()
